abline(h = mod4$coef[6], lty = 10)
plot(zph[7], main = "ECMO")
abline(h = mod4$coef[7], lty = 10)
plot(zph[8], main = "asma")
abline(h = mod4$coef[8], lty = 10)
plot(zph[9], main = "obeso")
abline(h = mod4$coef[9], lty = 10)
plot(zph[10], main = "mes")
abline(h = mod4$coef[10], lty = 10)
plot(zph[11], main = "dpoc1")
abline(h = mod4$coef[11], lty = 10)
plot(zph[12], main = "reg")
abline(h = mod4$coef[12], lty = 10)
plot(zph[13], main = "cardio")
abline(h = mod4$coef[13], lty = 10)
plot(zph[14], main = "has")
abline(h = mod4$coef[14], lty = 10)
plot(zph[15], main = "dm")
abline(h = mod4$coef[15], lty = 10)
plot(zph[16], main = "irc")
abline(h = mod4$coef[16], lty = 10)
plot(zph[17], main = "avc")
abline(h = mod4$coef[17], lty = 10)
plot(zph[18], main = "imuno")
abline(h = mod4$coef[18], lty = 10)
plot(zph[19], main = "reg2")
abline(h = mod4$coef[19], lty = 10)
plot(zph[20], main = "comorb2")
abline(h = mod4$coef[20], lty = 10)
# Ajustando o modelo
mod4 <- coxph(Surv(TempodeinternaçãoTOTAL, desf) ~ age + cencomorb + intuti + comorb + therenal + venti + ECMO + asma + obeso + mes + dpoc1 + reg + cardio + has + dm + irc + avc + imuno + reg2 + comorb2, data = BASE)
View(BANCO_QUADRIL_dezembro_2021)
library(readxl)
BANCO_QUADRIL_dezembro_2021 <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
View(base)
#PRÉ TRATAMENTOS DE DADOS
#=======================================================================
base$tratamento <- NULL
base.head()
head(base)
#PRÉ TRATAMENTOS DE DADOS
#=======================================================================
base$Atendimento <- NULL
head(base)
columns(base)
table(base(sexo))
table(base$sexo)
unique(base$sexo)
base$sexo = factor(base$sexo, levels = c("F","M"), labels = c(0,1))
base(is.na(base$sexo))
base[is.na(base$sexo)]
base[is.na(base$sexo)]
base[is.na(base$sexo)]
sapply(df, function(x) sum(is.na(x)))
sapply(base, function(x) sum(is.na(x)))
table(base$comentários) #groupby da quantidade de valores nas variaveis
sum(is.na(base$sexo))
base$hospital = factor(base$hospital, levels=c(['Analia' 'Villa' 'Jabaquara']), labels=c([0, 1, 2]))
base$hospital = factor(base$hospital, levels=c('Analia' 'Villa' 'Jabaquara'), labels=c(0, 1, 2))
base$hospital = factor(base$hospital, levels=c('Analia' 'Villa' 'Jabaquara'), labels=c(0, 1, 2))
unique(base$hospital) #quais valores tem na coluna ?
base$tempo cirúrgico (min)
view(base$tempo cirúrgico (min))
view(base$tempo_cirúrgico_(min))
view(base$geral)
View(base$tempo cirúrgico (min))
View(base$tempo cirúrgico (min))
View(base$tipo)
View(base$tempo cirúrgico (min))
View(base$tempo_cirúrgico_(min))
library(readxl)
teste1 <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(teste1)
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
library(readxl)
BANCO_QUADRIL_dezembro_2021 <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BANCO QUADRIL - dezembro 2021.xlsx")
View(BANCO_QUADRIL_dezembro_2021)
View(base)
View(base)
#PRÉ TRATAMENTOS DE DADOS ======================================================
base$Atendimento <- NULL #apagando coluna
base[base$tecnica = "geralperi"]
base[base$tecnica == "geralperi"]
base[base$tecnica == "geralperi"]
View(base)
library(dplyr)
filter(base, tecnica == 'geralperi')
filter(base, tecnica = 'geralperi')
teste = filter(base, tecnica = 'geralperi')
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(base)
#trocando por numeros:
base$sexo = factor(base$sexo, levels=c(['F','M']), labels=c(0, 1))
base$AVC prévio = factor(base$AVC prévio, levels=c(['não', 'sim']), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c(['sim', 'não']), labels=c(0, 1))
base$Doença cardíaca = factor(base$Doença cardíaca, levels=c(['não', 'sim']), labels=c(0, 1))
base$dm = factor(base$dm, levels=c(['sim', 'não']), labels=c(0, 1))
base$has = factor(base$has, levels=c(['não', 'sim']), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c(['não', 'sim']), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c(['raqui', 'geralraqui', 'geral']), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c(['não', 'inalatoria', 'venosa' nan]), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c(['bupi hiper', 'hipobarica' nan]), labels=c(0, 1, 2))
base$DVA = factor(base$DVA, levels=c(['não', 'sim']), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c(['não', 'sim']), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c(['não', 'sim']), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c(['não', 'sim']), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c(['sim', 'não', 'temperatura não aferida']), labels=c(0, 1, 2))
base$protocolo de hipotermia = factor(base$protocolo de hipotermia, levels=c(['não aplicado', 'aplicado' nan]), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c(['sim', 'não']), labels=c(0, 1))
#trocando por numeros:
base$sexo = factor(base$sexo, levels=c('F','M'), labels=c(0, 1))
base$AVC prévio = factor(base$AVC prévio, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('sim', 'não'), labels=c(0, 1))
base$Doença cardíaca = factor(base$Doença cardíaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('sim', 'não'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa' nan), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica' nan), labels=c(0, 1, 2))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não', 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo de hipotermia = factor(base$protocolo de hipotermia, levels=c('não aplicado', 'aplicado' nan), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c('sim', 'não'), labels=c(0, 1))
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('sim', 'não'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('sim', 'não'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa' nan), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica' nan), labels=c([0, 1, 2]))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não' 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado' nan), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c('sim', 'não'), labels=c(0, 1))
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(base)
#PRÉ TRATAMENTOS DE DADOS ======================================================
#tratando os atributos categoricos:===========
#trocando por numeros:
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('sim', 'não'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('sim', 'não'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa' nan), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica' nan), labels=c([0, 1, 2]))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não' 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado' nan), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c('sim', 'não'), labels=c(0, 1))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa', nan), labels=c(0, 1, 2, 3))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa'), labels=c(0, 1, 2, 3))
unique(base$geral)
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa', NA), labels=c(0, 1, 2, 3))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa'), labels=c(0, 1, 2, 3))
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(base)
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('sim', 'não'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('sim', 'não'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa'), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica', nan), labels=c([0, 1, 2]))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não' 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado', nan), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c('sim', 'não'), labels=c(0, 1))
View(base)
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('não', 'sim'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('não', 'sim'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa', nan), labels=c(0, 1, 2, 3))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica', nan), labels=c(0, 1, 2))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não', 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado', nan), labels=c(0, 1, 2))
base$hipo = factor(base$hipo, levels=c('não', 'sim'), labels=c([0, 1]))
table(base$geral)
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(base)
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('não', 'sim'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('não', 'sim'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa'), labels=c(0, 1, 2))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica'), labels=c(0, 1))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não', 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado'), labels=c(0, 1))
base$hipo = factor(base$hipo, levels=c('não', 'sim'), labels=c([0, 1]))
library(readxl)
base <- read_excel("projetos/Trabalho - Artroplastia de Quadril/BASE_TESTE_1.xlsx")
View(base)
base$sexo = factor(base$sexo, levels=c('F', 'M'), labels=c(0, 1))
base$AVC_previo = factor(base$AVC_previo, levels=c('não', 'sim'), labels=c(0, 1))
base$tabagismo = factor(base$tabagismo, levels=c('não', 'sim'), labels=c(0, 1))
base$Doenca_cardiaca = factor(base$Doenca_cardiaca, levels=c('não', 'sim'), labels=c(0, 1))
base$dm = factor(base$dm, levels=c('não', 'sim'), labels=c(0, 1))
base$has = factor(base$has, levels=c('não', 'sim'), labels=c(0, 1))
base$DRC = factor(base$DRC, levels=c('não', 'sim'), labels=c(0, 1))
base$tecnica = factor(base$tecnica, levels=c('raqui', 'geralraqui', 'geral'), labels=c(0, 1, 2))
base$geral = factor(base$geral, levels=c('não', 'inalatoria', 'venosa'), labels=c(0, 1, 2))
base$tipo = factor(base$tipo, levels=c('bupi hiper', 'hipobarica'), labels=c(0, 1))
base$DVA = factor(base$DVA, levels=c('não', 'sim'), labels=c(0, 1))
base$sangramento = factor(base$sangramento, levels=c('não', 'sim'), labels=c(0, 1))
base$Transamin = factor(base$Transamin, levels=c('não', 'sim'), labels=c(0, 1))
base$transfusão = factor(base$transfusão, levels=c('não', 'sim'), labels=c(0, 1))
base$hipotermia = factor(base$hipotermia, levels=c('sim', 'não', 'temperatura não aferida'), labels=c(0, 1, 2))
base$protocolo_de_hipotermia = factor(base$protocolo_de_hipotermia, levels=c('não aplicado', 'aplicado'), labels=c(0, 1))
base$hipo = factor(base$hipo, levels=c('não', 'sim'), labels=c(0, 1))
table(base$geral)
unique(base$geral)
base$Ano = NULL
#TRATAMENTO DE ATRIBUTOS NUMERICOS NULOS ======================================================
base[is.na(base$idade)] #mostrar valores nulos
#TRATAMENTO DE ATRIBUTOS NUMERICOS NULOS ======================================================
sum(is.na(base$idade)) #mostrar valores nulos
sum(is.na(base$peso))
sum(is.na(base$liq))
sapply(base, function(x) sum(is.na(x)))
#FAZENDO ESCALONAMENTO DOS ATRIBUTOS NUMERICOS
base$idade=scale(base$idade)
base$peso = scale(base$peso)
base$liq = scale(base$liq
#DIVIDINDO OS DADOS EM TREINO E TESTE
library(caTools)
library(caTools)
set.seed(1) #porção de divisão
divisao = sample.split(base$hipo, SplitRatio=0.75)
base_treinamento = subset(base, divisaoo == TRUE) #pegando os valores TRUE
base_teste = subset(base, divisao == FALSE)
base_treinamento = subset(base, divisao == TRUE) #pegando os valores TRUE
library(e1071)
library(e1071)
install.packages("e1071", dep = TRUE)
library(e1071)
classificador = naiveBayes(x=base_treinamento[-23], y=base_treinamento$hipo)
print(classificador)
summary(classificador)
previsoes = predict(classificador, newdata = base_teste[-23]
previsoes = predict(classificador, newdata = base_teste[-23])
previsoes = predict(classificador, newdata = base_teste[-23])
previsoes
matriz_confusao = table(base_teste[, 23], previsoes)
matriz_confusao
matriz_confusao = table(base_teste[, 23], previsoes)
matriz_confusao
matriz
matriz = table(base_teste[, 23], previsoes)
matriz
matriz = table(base_treinamento[, 23], previsoes)
matriz_confusao = table(base_treinamento[, 23], previsoes)
matriz_confusao
print(matriz_confusao)
print(matriz_confusao)
matriz_confusao = table(base_treinamento[, 23], previsoes)
print(matriz_confusao)
previsoes
matriz_confusao = table(base_treinamento[, 23], previsoes)
matriz_confusao = table(base_treinamento[-23], previsoes)
View(base_treinamento)
View(base_teste)
previsoes = predict(classificador, newdata = base_teste[-23])
matriz_confusao = table(base_teste[, 23], previsoes)
print(matriz_confusao)
library(caret)
confusionMatrix(matriz_confusao)
matriz_confusao = table(base_teste[-23], previsoes)
confusionMatrix(Predict, base_teste[,23])
install.packages("caret")
library(caret)
matriz_confusao = table(base_teste[, 23], previsoes)
print(matriz_confusao)
confusionMatrix(Predict, base_teste[,23])
confusionMatrix(previsoes, base_teste$hipo)
library(caret)
install.packages("Rcpp")
install.packages("Rcpp")
confusionMatrix(previsoes, base_teste$hipo)
install.packages('caret', dependencies=TRUE)
matriz_confusao = table(base_teste[, 23], previsoes)
print(matriz_confusao)
confusionMatrix(matriz_confusao)
install.packages("Rcpp")
confusionMatrix(matriz_confusao)
confusionMatrix(matriz_confusao)
confusionMatrix(matriz_confusao)
install.packages('caret', dependencies=TRUE)
library(caret)
install.packages("Rcpp", dependencies=TRUE)
install.packages("Rcpp", dependencies = TRUE)
(matriz_confusao)
confusionMatrix(matriz_confusao)
teste1 <- read.csv("C:/Users/ADM/Downloads/teste1.csv", row.names=1)
View(teste1)
df <- read.csv("C:/Users/ADM/Downloads/teste1.csv", row.names=1)
View(df)
install.packages("meta")
library(meta)
classificador = glm(formla = hipo ~;. family=binomial, data=base
classificador = glm(formla = hipo ~., family=binomial, data=base)
classificador = glm(formla = hipo ~., family=binomial, data=df)
classificador = glm(formla=hipo ~ ., family=binomial, data=df)
classificador = glm(formla=hipo ~, family=binomial, data=df)
classificador = glm(formla=hipo ~., family=binomial(link='logit'), data=df)
classificador = glm(formula=hipo ~., family=binomial(link='logit'), data=df)
summary(classificador)
classificador = glm(formula=hipo ~ Ano, family=binomial(link='logit'), data=df)
summary(classificador)
classificador = glm(formula=tecnica ~ hipo, family=binomial(link='logit'), data=df)
classificador = glm(formula=hipo ~ tecnica, family=binomial(link='logit'), data=df)
summary(classificador)
classificador = glm(formula=tecnica ~hipo, family=binomial(link='logit'), data=df)
classificador = glm(formula=hipo ~ tecnica, family=binomial(link='logit'), data=df)
summary(classificador)
classificador = glm(formula=tecnica ~ DVA, family=binomial(link='logit'), data=df)
classificador = glm(formula=DVA ~ tecnica, family=binomial(link='logit'), data=df)
summary(classificador)
df$DVA
df$tecnica
classificador = glm(formula=hipo ~ tecnica, family=binomial(link='logit'), data=df)
summary(classificador)
classificador = glm(formula=hipo ~ Ano, family=binomial(link='logit'), data=df)
summary(classificador)
odds.ration(classificador)
odds.ratio(classificador)
oddsratio(classificador)
table(df$hipo, df$Ano)
oddsratio.wald(table(df$hipo, df$Ano))
oddsratio.wald(table(df$hipo, df$Ano))
oddsratio.wald(table(hipo, Ano))
install.packages("oddsratio")
library(oddsratio)
oddsratio.wald(table(df$hipo, df$Ano))
oddsratio.wald(table(hipo, Ano))
odds.ratio.wald(table(hipo, Ano))
install.packages("epitools")
library(epitools)
oddsratio(table(hipo, Ano))
oddsratio(table(df$hipo, df$Ano))
table(df$hipo, df$Ano)
classificador = glm(formula=hipo ~ sexo, family=binomial(link='logit'), data=df)
summary(classificador)
oddsratio(classificador)
df <- gsheet2tbl('docs.google.com/spreadsheets/d/1kpWtAxj7XTNaXowMjBsZ5lWm6LlbdE2nzH6s6Pll1Y8')
# remove NAs
df <- df[,-3]
df <- df[-8,]
# convert to matrix
mat <- data.matrix(df, rownames.force = NA)
# calculate odds ratio
oddsratio(mat, log = FALSE)
tabela = matrix(c(74,63,137,118,69,187),nrow=3,ncol=2)
tabela
riskratio.wald(tabela)
oddsratio(tabela)
matrix(table(df$hipo, df$Ano))
matrix(df$hipo, df$Ano)
table(df$hipo, df$Ano)
table(hipo, Ano)
oddsratio(table(df$hipo, df$Ano))
azinho = df$hipo
bzinho = df$sexo
oddsratio.wald(table(azinho, bzinho))
oddsratio(table(azinho, bzinho))
View(mat)
del mat
del(mat)
classificador = glm(formula=hipo ~ sexo, family=binomial(link='logit'), data=df)
summary(classificador)
a = df$hipo
b = df$sex
oddsratio.wald(table(a, b))
oddsratio(table(azinho, bzinho))
oddsratio(table(azinho, bzinho))
classificador = glm(formula=hipo ~ ELETIVA_URGENCIA, family=binomial(link='logit'), data=df)
summary(classificador) #esse aqui é resumo
a = df$hipo
b = df$ELETIVA_URGENCIA
oddsratio.wald(table(a, b))
oddsratio(table(azinho, bzinho))
oddsratio.wald(table(a, b))
b = df$AVC_previo
classificador = glm(formula=hipo ~ AVC_previo, family=binomial(link='logit'), data=df)
summary(classificador) #esse aqui é resumo
a = df$hipo
b = df$AVC_previo
oddsratio.wald(table(a, b))
oddsratio(table(a, b))
oddsra
oddsratio.fisher(table(a, b))
teste2 <- read.csv("~/projetos/teste2.csv")
View(teste2)
df <- read.csv("~/projetos/teste2.csv")
View(df)
install.packages("pacman")
library(pacman)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
#Carregando o banco de dados
df <- read.csv("~/projetos/teste2.csv", stringAsFactors=TRUE)
df <- read.csv("~/projetos/teste2.csv", stringAsFactors=TRUE)
df <- read.csv("~/projetos/teste2.csv", stringAsFactors=TRUE)
load("~/projetos/teste2.csv")
df <- read.csv("~/projetos/teste2.csv", stringAsFactors=TRUE)
df <- read.csv("~/projetos/teste2.csv", stringAsFactors=TRUE)
teste2 <- read.csv("~/projetos/teste2.csv", stringsAsFactors=TRUE)
View(teste2)
teste2 <- read.csv("~/projetos/teste2.csv", stringsAsFactors=TRUE)
View(teste2)
teste2 <- read.csv("~/projetos/teste2.csv", stringsAsFactors=TRUE)
View(teste2)
df <- read.csv("~/projetos/teste2.csv", stringsAsFactors=TRUE)
View(df)
df
levels(df$Ano)
levels(df$id)
levels(df$AVC_previo)
mod = glm(hipo ~., family=binomial(link='logit'), data=df)
summary(mod)
load("~/projetos/Trabalho - Artroplastia de Quadril/leopoldetico.csv")
load("~/projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx")
View(df)
library(readxl)
df <- read_excel("projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx")
View(df)
install.packages("pacman")
library(pacman)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
mod_todos = glm(hipo ~., family=binomial(link='logit'), data=df)
summary(mod_todos)
mod = glm(hipo ~ano, family=binomial(link='logit'), data=df)
mod = glm(hipo~ano, family=binomial(link='logit'), data=df)
#checagem das categorias de referencia
levels(df$hipo)
library(readxl)
df <- read_excel("projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx", string2factors = TRUE)
View(df)
library(readxl)
df <- read_excel("projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx", string2factors = TRUE)
View(df)
df <- read_excel("projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx", string2factors = TRUE)
setwd("C:\Users\ADM\Documents\projetos")
setwd("C:/Users/ADM/Documents/projetos")
library(readxl)
df <- read_excel("projetos/Trabalho - Artroplastia de Quadril/leopoldetico.xlsx", string2factors = TRUE)
df <- read_excel("Trabalho - Artroplastia de Quadril/leopoldetico.xlsx", string2factors = TRUE)
setwd("C:/Users/ADM/Documents/projetos/Trabalho - Artroplastia de Quadril")
df <- read_excel("leopoldetico.xlsx", string2factors = TRUE)
df <- read_excel("leopoldetico.xlsx", stringAsfactors = TRUE)
setwd("projetos/Trabalho - Artroplastia de Quadril")
setwd("C:/Users/ADM/Documents/projetos/Trabalho - Artroplastia de Quadril")
leopoldetico <- read.csv("~/projetos/Trabalho - Artroplastia de Quadril/leopoldetico.csv", stringsAsFactors=TRUE)
View(leopoldetico)
df <- read.csv("~/projetos/Trabalho - Artroplastia de Quadril/leopoldetico.csv", stringsAsFactors=TRUE)
View(df)
install.packages("pacman")
library(pacman)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
install.packages("pacman")
